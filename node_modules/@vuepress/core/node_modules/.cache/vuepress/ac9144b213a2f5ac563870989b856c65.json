{"remainingRequest":"C:\\Users\\陈昊\\Desktop\\myblog\\node_modules\\babel-loader\\lib\\index.js??ref--3-1!C:\\Users\\陈昊\\Desktop\\myblog\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\陈昊\\Desktop\\myblog\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\陈昊\\Desktop\\myblog\\docs\\.vuepress\\components\\NewFont.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\陈昊\\Desktop\\myblog\\docs\\.vuepress\\components\\NewFont.vue","mtime":1630939993192},{"path":"C:\\Users\\陈昊\\Desktop\\myblog\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1630405559601},{"path":"C:\\Users\\陈昊\\Desktop\\myblog\\node_modules\\babel-loader\\lib\\index.js","mtime":1630405559084},{"path":"C:\\Users\\陈昊\\Desktop\\myblog\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1630405559601},{"path":"C:\\Users\\陈昊\\Desktop\\myblog\\node_modules\\vue-loader\\lib\\index.js","mtime":1630405560208}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9jbGFzc0NhbGxDaGVjayBmcm9tICJDOi9Vc2Vycy9cdTk2NDhcdTY2MEEvRGVza3RvcC9teWJsb2cvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2NsYXNzQ2FsbENoZWNrIjsKaW1wb3J0IF9jcmVhdGVDbGFzcyBmcm9tICJDOi9Vc2Vycy9cdTk2NDhcdTY2MEEvRGVza3RvcC9teWJsb2cvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2NyZWF0ZUNsYXNzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZnVuY3Rpb24uYmluZC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC50by1zdHJpbmcuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy93ZWIudGltZXJzLmpzIjsKLy8KLy8KLy8KLy8KZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICJOZXdGb250IiwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHt9OwogIH0sCiAgbW91bnRlZDogZnVuY3Rpb24gbW91bnRlZCgpIHsKICAgIHZhciBUZXh0U2NyYW1ibGUgPSAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKCkgewogICAgICBmdW5jdGlvbiBUZXh0U2NyYW1ibGUoZWwpIHsKICAgICAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgVGV4dFNjcmFtYmxlKTsKCiAgICAgICAgdGhpcy5lbCA9IGVsOwogICAgICAgIHRoaXMuY2hhcnMgPSAiX19fX19fX18iOwogICAgICAgIHRoaXMudXBkYXRlID0gdGhpcy51cGRhdGUuYmluZCh0aGlzKTsKICAgICAgfQoKICAgICAgX2NyZWF0ZUNsYXNzKFRleHRTY3JhbWJsZSwgW3sKICAgICAgICBrZXk6ICJzZXRUZXh0IiwKICAgICAgICB2YWx1ZTogZnVuY3Rpb24gc2V0VGV4dChuZXdUZXh0KSB7CiAgICAgICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgICAgIHZhciBvbGRUZXh0ID0gdGhpcy5lbC5pbm5lclRleHQ7CiAgICAgICAgICB2YXIgbGVuZ3RoID0gTWF0aC5tYXgob2xkVGV4dC5sZW5ndGgsIG5ld1RleHQubGVuZ3RoKTsKICAgICAgICAgIHZhciBwcm9taXNlID0gbmV3IFByb21pc2UoZnVuY3Rpb24gKHJlc29sdmUpIHsKICAgICAgICAgICAgcmV0dXJuIF90aGlzLnJlc29sdmUgPSByZXNvbHZlOwogICAgICAgICAgfSk7CiAgICAgICAgICB0aGlzLnF1ZXVlID0gW107CgogICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBsZW5ndGg7IGkrKykgewogICAgICAgICAgICB2YXIgZnJvbSA9IG9sZFRleHRbaV0gfHwgIiI7CiAgICAgICAgICAgIHZhciB0byA9IG5ld1RleHRbaV0gfHwgIiI7CiAgICAgICAgICAgIHZhciBzdGFydCA9IE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIDQwKTsKICAgICAgICAgICAgdmFyIGVuZCA9IHN0YXJ0ICsgTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogNDApOwogICAgICAgICAgICB0aGlzLnF1ZXVlLnB1c2goewogICAgICAgICAgICAgIGZyb206IGZyb20sCiAgICAgICAgICAgICAgdG86IHRvLAogICAgICAgICAgICAgIHN0YXJ0OiBzdGFydCwKICAgICAgICAgICAgICBlbmQ6IGVuZAogICAgICAgICAgICB9KTsKICAgICAgICAgIH0KCiAgICAgICAgICBjYW5jZWxBbmltYXRpb25GcmFtZSh0aGlzLmZyYW1lUmVxdWVzdCk7CiAgICAgICAgICB0aGlzLmZyYW1lID0gMDsKICAgICAgICAgIHRoaXMudXBkYXRlKCk7CiAgICAgICAgICByZXR1cm4gcHJvbWlzZTsKICAgICAgICB9CiAgICAgIH0sIHsKICAgICAgICBrZXk6ICJ1cGRhdGUiLAogICAgICAgIHZhbHVlOiBmdW5jdGlvbiB1cGRhdGUoKSB7CiAgICAgICAgICB2YXIgb3V0cHV0ID0gIiI7CiAgICAgICAgICB2YXIgY29tcGxldGUgPSAwOwoKICAgICAgICAgIGZvciAodmFyIGkgPSAwLCBuID0gdGhpcy5xdWV1ZS5sZW5ndGg7IGkgPCBuOyBpKyspIHsKICAgICAgICAgICAgdmFyIF90aGlzJHF1ZXVlJGkgPSB0aGlzLnF1ZXVlW2ldLAogICAgICAgICAgICAgICAgZnJvbSA9IF90aGlzJHF1ZXVlJGkuZnJvbSwKICAgICAgICAgICAgICAgIHRvID0gX3RoaXMkcXVldWUkaS50bywKICAgICAgICAgICAgICAgIHN0YXJ0ID0gX3RoaXMkcXVldWUkaS5zdGFydCwKICAgICAgICAgICAgICAgIGVuZCA9IF90aGlzJHF1ZXVlJGkuZW5kLAogICAgICAgICAgICAgICAgX2NoYXIgPSBfdGhpcyRxdWV1ZSRpWyJjaGFyIl07CgogICAgICAgICAgICBpZiAodGhpcy5mcmFtZSA+PSBlbmQpIHsKICAgICAgICAgICAgICBjb21wbGV0ZSsrOwogICAgICAgICAgICAgIG91dHB1dCArPSB0bzsKICAgICAgICAgICAgfSBlbHNlIGlmICh0aGlzLmZyYW1lID49IHN0YXJ0KSB7CiAgICAgICAgICAgICAgaWYgKCFfY2hhciB8fCBNYXRoLnJhbmRvbSgpIDwgMC4yOCkgewogICAgICAgICAgICAgICAgX2NoYXIgPSB0aGlzLnJhbmRvbUNoYXIoKTsKICAgICAgICAgICAgICAgIHRoaXMucXVldWVbaV1bImNoYXIiXSA9IF9jaGFyOwogICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgb3V0cHV0ICs9ICI8c3BhbiBjbGFzcz1cImR1ZFwiPiIuY29uY2F0KF9jaGFyLCAiPC9zcGFuPiIpOwogICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgIG91dHB1dCArPSBmcm9tOwogICAgICAgICAgICB9CiAgICAgICAgICB9CgogICAgICAgICAgdGhpcy5lbC5pbm5lckhUTUwgPSBvdXRwdXQ7CgogICAgICAgICAgaWYgKGNvbXBsZXRlID09PSB0aGlzLnF1ZXVlLmxlbmd0aCkgewogICAgICAgICAgICB0aGlzLnJlc29sdmUoKTsKICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIHRoaXMuZnJhbWVSZXF1ZXN0ID0gcmVxdWVzdEFuaW1hdGlvbkZyYW1lKHRoaXMudXBkYXRlKTsKICAgICAgICAgICAgdGhpcy5mcmFtZSsrOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSwgewogICAgICAgIGtleTogInJhbmRvbUNoYXIiLAogICAgICAgIHZhbHVlOiBmdW5jdGlvbiByYW5kb21DaGFyKCkgewogICAgICAgICAgcmV0dXJuIHRoaXMuY2hhcnNbTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogdGhpcy5jaGFycy5sZW5ndGgpXTsKICAgICAgICB9CiAgICAgIH1dKTsKCiAgICAgIHJldHVybiBUZXh0U2NyYW1ibGU7CiAgICB9KCk7CgogICAgdmFyIGVsID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcigiLmhlcm8gLmRlc2NyaXB0aW9uIik7CgogICAgaWYgKCFlbCkgewogICAgICB2YXIgdGltZXIgPSBzZXRJbnRlcnZhbChmdW5jdGlvbiAoKSB7CiAgICAgICAgaWYgKGVsKSB7CiAgICAgICAgICBpbml0KCk7CiAgICAgICAgICB0aW1lciAmJiBjbGVhckludGVydmFsKHRpbWVyKTsKICAgICAgICB9CgogICAgICAgIGVsID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcigiLmhlcm8gLmRlc2NyaXB0aW9uIik7CiAgICAgIH0sIDEwMCk7CiAgICB9IGVsc2UgewogICAgICBpbml0KCk7CiAgICB9CgogICAgZnVuY3Rpb24gaW5pdCgpIHsKICAgICAgdmFyIGZ4ID0gbmV3IFRleHRTY3JhbWJsZShlbCk7CiAgICAgIHZhciBwaHJhc2VzID0gWyLmnInkupvpuJ/lhL/mmK/lhbPkuI3kvY/nmoQiLCAi5a6D55qE5q+P5LiA5qC557695q+b6YO96Zeq6ICA552A6Ieq55Sx55qE5YWJ6L6JIiwgIuWBmuS6uuWmguaenOayoeacieaipuaDsyIsICLpgqPot5/lkrjpsbzmnInku4DkuYjljLrliKsiLCAi57uZ5oiR5LiA5Liq5py65Lya77yM5oiR5oOz5YGa5Liq5aW95Lq6IiwgIuW9k+S9oOiupOS4uuayoeaciemUmeivr+eahOaXtuWAmSIsICLplJnlsLHkuIDlrprkvJrmnaXmib7kvaAiLCAi5rKh5pyJ5Lq66IO95aSf5rC46L+c5bm06L27IiwgIuS9huawuOi/nOacieS6uuato+W5tOi9u+edgCJdOyAvLyBmeC5zZXRUZXh0KCflhpnku6PnoIHnmoTmhqjmhqgnKQoKICAgICAgdmFyIGNvdW50ZXIgPSAwOwoKICAgICAgdmFyIG5leHQgPSBmdW5jdGlvbiBuZXh0KCkgewogICAgICAgIGZ4LnNldFRleHQocGhyYXNlc1tjb3VudGVyXSkudGhlbihmdW5jdGlvbiAoKSB7CiAgICAgICAgICBzZXRUaW1lb3V0KG5leHQsIDIwMDApOwogICAgICAgIH0pOwogICAgICAgIGNvdW50ZXIgPSAoY291bnRlciArIDEpICUgcGhyYXNlcy5sZW5ndGg7CiAgICAgIH07CgogICAgICBuZXh0KCk7CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["NewFont.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div></div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"NewFont\",\r\n  data() {\r\n    return {};\r\n  },\r\n  mounted() {\r\n    class TextScramble {\r\n      constructor(el) {\r\n        this.el = el;\r\n        this.chars = \"________\";\r\n        this.update = this.update.bind(this);\r\n      }\r\n      setText(newText) {\r\n        const oldText = this.el.innerText;\r\n        const length = Math.max(oldText.length, newText.length);\r\n        const promise = new Promise((resolve) => (this.resolve = resolve));\r\n        this.queue = [];\r\n        for (let i = 0; i < length; i++) {\r\n          const from = oldText[i] || \"\";\r\n          const to = newText[i] || \"\";\r\n          const start = Math.floor(Math.random() * 40);\r\n          const end = start + Math.floor(Math.random() * 40);\r\n          this.queue.push({ from, to, start, end });\r\n        }\r\n        cancelAnimationFrame(this.frameRequest);\r\n        this.frame = 0;\r\n        this.update();\r\n        return promise;\r\n      }\r\n      update() {\r\n        let output = \"\";\r\n        let complete = 0;\r\n        for (let i = 0, n = this.queue.length; i < n; i++) {\r\n          let { from, to, start, end, char } = this.queue[i];\r\n          if (this.frame >= end) {\r\n            complete++;\r\n            output += to;\r\n          } else if (this.frame >= start) {\r\n            if (!char || Math.random() < 0.28) {\r\n              char = this.randomChar();\r\n              this.queue[i].char = char;\r\n            }\r\n            output += `<span class=\"dud\">${char}</span>`;\r\n          } else {\r\n            output += from;\r\n          }\r\n        }\r\n        this.el.innerHTML = output;\r\n        if (complete === this.queue.length) {\r\n          this.resolve();\r\n        } else {\r\n          this.frameRequest = requestAnimationFrame(this.update);\r\n          this.frame++;\r\n        }\r\n      }\r\n      randomChar() {\r\n        return this.chars[Math.floor(Math.random() * this.chars.length)];\r\n      }\r\n    }\r\n\r\n    let el = document.querySelector(\".hero .description\");\r\n\r\n    if (!el) {\r\n      const timer = setInterval(() => {\r\n        if (el) {\r\n          init();\r\n          timer && clearInterval(timer);\r\n        }\r\n        el = document.querySelector(\".hero .description\");\r\n      }, 100);\r\n    } else {\r\n      init();\r\n    }\r\n\r\n    function init() {\r\n      const fx = new TextScramble(el);\r\n      const phrases = [\r\n        \"有些鸟儿是关不住的\",\r\n        \"它的每一根羽毛都闪耀着自由的光辉\",\r\n        \"做人如果没有梦想\",\r\n        \"那跟咸鱼有什么区别\",\r\n        \"给我一个机会，我想做个好人\",\r\n        \"当你认为没有错误的时候\",\r\n        \"错就一定会来找你\",\r\n        \"没有人能够永远年轻\",\r\n        \"但永远有人正年轻着\",\r\n      ];\r\n      // fx.setText('写代码的憨憨')\r\n      let counter = 0;\r\n      const next = () => {\r\n        fx.setText(phrases[counter]).then(() => {\r\n          setTimeout(next, 2000);\r\n        });\r\n        counter = (counter + 1) % phrases.length;\r\n      };\r\n      next();\r\n    }\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n</style>\r\n"],"sourceRoot":"docs/.vuepress/components"}]}