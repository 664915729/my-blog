{"remainingRequest":"C:\\Users\\陈昊\\Desktop\\m-vuepress\\node_modules\\babel-loader\\lib\\index.js??ref--3-1!C:\\Users\\陈昊\\Desktop\\m-vuepress\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\陈昊\\Desktop\\m-vuepress\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\陈昊\\Desktop\\m-vuepress\\docs\\.vuepress\\components\\NewFont.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\陈昊\\Desktop\\m-vuepress\\docs\\.vuepress\\components\\NewFont.vue","mtime":1630939993192},{"path":"C:\\Users\\陈昊\\Desktop\\m-vuepress\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1630405559601},{"path":"C:\\Users\\陈昊\\Desktop\\m-vuepress\\node_modules\\babel-loader\\lib\\index.js","mtime":1630405559084},{"path":"C:\\Users\\陈昊\\Desktop\\m-vuepress\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1630405559601},{"path":"C:\\Users\\陈昊\\Desktop\\m-vuepress\\node_modules\\vue-loader\\lib\\index.js","mtime":1630405560208}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9jbGFzc0NhbGxDaGVjayBmcm9tICJDOi9Vc2Vycy9cdTk2NDhcdTY2MEEvRGVza3RvcC9tLXZ1ZXByZXNzL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9jbGFzc0NhbGxDaGVjayI7CmltcG9ydCBfY3JlYXRlQ2xhc3MgZnJvbSAiQzovVXNlcnMvXHU5NjQ4XHU2NjBBL0Rlc2t0b3AvbS12dWVwcmVzcy9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vY3JlYXRlQ2xhc3MiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5mdW5jdGlvbi5iaW5kLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL3dlYi50aW1lcnMuanMiOwovLwovLwovLwovLwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogIk5ld0ZvbnQiLAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4ge307CiAgfSwKICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkgewogICAgdmFyIFRleHRTY3JhbWJsZSA9IC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoKSB7CiAgICAgIGZ1bmN0aW9uIFRleHRTY3JhbWJsZShlbCkgewogICAgICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBUZXh0U2NyYW1ibGUpOwoKICAgICAgICB0aGlzLmVsID0gZWw7CiAgICAgICAgdGhpcy5jaGFycyA9ICJfX19fX19fXyI7CiAgICAgICAgdGhpcy51cGRhdGUgPSB0aGlzLnVwZGF0ZS5iaW5kKHRoaXMpOwogICAgICB9CgogICAgICBfY3JlYXRlQ2xhc3MoVGV4dFNjcmFtYmxlLCBbewogICAgICAgIGtleTogInNldFRleHQiLAogICAgICAgIHZhbHVlOiBmdW5jdGlvbiBzZXRUZXh0KG5ld1RleHQpIHsKICAgICAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICAgICAgdmFyIG9sZFRleHQgPSB0aGlzLmVsLmlubmVyVGV4dDsKICAgICAgICAgIHZhciBsZW5ndGggPSBNYXRoLm1heChvbGRUZXh0Lmxlbmd0aCwgbmV3VGV4dC5sZW5ndGgpOwogICAgICAgICAgdmFyIHByb21pc2UgPSBuZXcgUHJvbWlzZShmdW5jdGlvbiAocmVzb2x2ZSkgewogICAgICAgICAgICByZXR1cm4gX3RoaXMucmVzb2x2ZSA9IHJlc29sdmU7CiAgICAgICAgICB9KTsKICAgICAgICAgIHRoaXMucXVldWUgPSBbXTsKCiAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGxlbmd0aDsgaSsrKSB7CiAgICAgICAgICAgIHZhciBmcm9tID0gb2xkVGV4dFtpXSB8fCAiIjsKICAgICAgICAgICAgdmFyIHRvID0gbmV3VGV4dFtpXSB8fCAiIjsKICAgICAgICAgICAgdmFyIHN0YXJ0ID0gTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogNDApOwogICAgICAgICAgICB2YXIgZW5kID0gc3RhcnQgKyBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiA0MCk7CiAgICAgICAgICAgIHRoaXMucXVldWUucHVzaCh7CiAgICAgICAgICAgICAgZnJvbTogZnJvbSwKICAgICAgICAgICAgICB0bzogdG8sCiAgICAgICAgICAgICAgc3RhcnQ6IHN0YXJ0LAogICAgICAgICAgICAgIGVuZDogZW5kCiAgICAgICAgICAgIH0pOwogICAgICAgICAgfQoKICAgICAgICAgIGNhbmNlbEFuaW1hdGlvbkZyYW1lKHRoaXMuZnJhbWVSZXF1ZXN0KTsKICAgICAgICAgIHRoaXMuZnJhbWUgPSAwOwogICAgICAgICAgdGhpcy51cGRhdGUoKTsKICAgICAgICAgIHJldHVybiBwcm9taXNlOwogICAgICAgIH0KICAgICAgfSwgewogICAgICAgIGtleTogInVwZGF0ZSIsCiAgICAgICAgdmFsdWU6IGZ1bmN0aW9uIHVwZGF0ZSgpIHsKICAgICAgICAgIHZhciBvdXRwdXQgPSAiIjsKICAgICAgICAgIHZhciBjb21wbGV0ZSA9IDA7CgogICAgICAgICAgZm9yICh2YXIgaSA9IDAsIG4gPSB0aGlzLnF1ZXVlLmxlbmd0aDsgaSA8IG47IGkrKykgewogICAgICAgICAgICB2YXIgX3RoaXMkcXVldWUkaSA9IHRoaXMucXVldWVbaV0sCiAgICAgICAgICAgICAgICBmcm9tID0gX3RoaXMkcXVldWUkaS5mcm9tLAogICAgICAgICAgICAgICAgdG8gPSBfdGhpcyRxdWV1ZSRpLnRvLAogICAgICAgICAgICAgICAgc3RhcnQgPSBfdGhpcyRxdWV1ZSRpLnN0YXJ0LAogICAgICAgICAgICAgICAgZW5kID0gX3RoaXMkcXVldWUkaS5lbmQsCiAgICAgICAgICAgICAgICBfY2hhciA9IF90aGlzJHF1ZXVlJGlbImNoYXIiXTsKCiAgICAgICAgICAgIGlmICh0aGlzLmZyYW1lID49IGVuZCkgewogICAgICAgICAgICAgIGNvbXBsZXRlKys7CiAgICAgICAgICAgICAgb3V0cHV0ICs9IHRvOwogICAgICAgICAgICB9IGVsc2UgaWYgKHRoaXMuZnJhbWUgPj0gc3RhcnQpIHsKICAgICAgICAgICAgICBpZiAoIV9jaGFyIHx8IE1hdGgucmFuZG9tKCkgPCAwLjI4KSB7CiAgICAgICAgICAgICAgICBfY2hhciA9IHRoaXMucmFuZG9tQ2hhcigpOwogICAgICAgICAgICAgICAgdGhpcy5xdWV1ZVtpXVsiY2hhciJdID0gX2NoYXI7CiAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICBvdXRwdXQgKz0gIjxzcGFuIGNsYXNzPVwiZHVkXCI+Ii5jb25jYXQoX2NoYXIsICI8L3NwYW4+Iik7CiAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgb3V0cHV0ICs9IGZyb207CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KCiAgICAgICAgICB0aGlzLmVsLmlubmVySFRNTCA9IG91dHB1dDsKCiAgICAgICAgICBpZiAoY29tcGxldGUgPT09IHRoaXMucXVldWUubGVuZ3RoKSB7CiAgICAgICAgICAgIHRoaXMucmVzb2x2ZSgpOwogICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgdGhpcy5mcmFtZVJlcXVlc3QgPSByZXF1ZXN0QW5pbWF0aW9uRnJhbWUodGhpcy51cGRhdGUpOwogICAgICAgICAgICB0aGlzLmZyYW1lKys7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9LCB7CiAgICAgICAga2V5OiAicmFuZG9tQ2hhciIsCiAgICAgICAgdmFsdWU6IGZ1bmN0aW9uIHJhbmRvbUNoYXIoKSB7CiAgICAgICAgICByZXR1cm4gdGhpcy5jaGFyc1tNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiB0aGlzLmNoYXJzLmxlbmd0aCldOwogICAgICAgIH0KICAgICAgfV0pOwoKICAgICAgcmV0dXJuIFRleHRTY3JhbWJsZTsKICAgIH0oKTsKCiAgICB2YXIgZWwgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCIuaGVybyAuZGVzY3JpcHRpb24iKTsKCiAgICBpZiAoIWVsKSB7CiAgICAgIHZhciB0aW1lciA9IHNldEludGVydmFsKGZ1bmN0aW9uICgpIHsKICAgICAgICBpZiAoZWwpIHsKICAgICAgICAgIGluaXQoKTsKICAgICAgICAgIHRpbWVyICYmIGNsZWFySW50ZXJ2YWwodGltZXIpOwogICAgICAgIH0KCiAgICAgICAgZWwgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCIuaGVybyAuZGVzY3JpcHRpb24iKTsKICAgICAgfSwgMTAwKTsKICAgIH0gZWxzZSB7CiAgICAgIGluaXQoKTsKICAgIH0KCiAgICBmdW5jdGlvbiBpbml0KCkgewogICAgICB2YXIgZnggPSBuZXcgVGV4dFNjcmFtYmxlKGVsKTsKICAgICAgdmFyIHBocmFzZXMgPSBbIuacieS6m+m4n+WEv+aYr+WFs+S4jeS9j+eahCIsICLlroPnmoTmr4/kuIDmoLnnvr3mr5vpg73pl6rogIDnnYDoh6rnlLHnmoTlhYnovokiLCAi5YGa5Lq65aaC5p6c5rKh5pyJ5qKm5oOzIiwgIumCo+i3n+WSuOmxvOacieS7gOS5iOWMuuWIqyIsICLnu5nmiJHkuIDkuKrmnLrkvJrvvIzmiJHmg7PlgZrkuKrlpb3kuroiLCAi5b2T5L2g6K6k5Li65rKh5pyJ6ZSZ6K+v55qE5pe25YCZIiwgIumUmeWwseS4gOWumuS8muadpeaJvuS9oCIsICLmsqHmnInkurrog73lpJ/msLjov5zlubTovbsiLCAi5L2G5rC46L+c5pyJ5Lq65q2j5bm06L27552AIl07IC8vIGZ4LnNldFRleHQoJ+WGmeS7o+eggeeahOaGqOaGqCcpCgogICAgICB2YXIgY291bnRlciA9IDA7CgogICAgICB2YXIgbmV4dCA9IGZ1bmN0aW9uIG5leHQoKSB7CiAgICAgICAgZnguc2V0VGV4dChwaHJhc2VzW2NvdW50ZXJdKS50aGVuKGZ1bmN0aW9uICgpIHsKICAgICAgICAgIHNldFRpbWVvdXQobmV4dCwgMjAwMCk7CiAgICAgICAgfSk7CiAgICAgICAgY291bnRlciA9IChjb3VudGVyICsgMSkgJSBwaHJhc2VzLmxlbmd0aDsKICAgICAgfTsKCiAgICAgIG5leHQoKTsKICAgIH0KICB9Cn07"},{"version":3,"sources":["NewFont.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div></div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"NewFont\",\r\n  data() {\r\n    return {};\r\n  },\r\n  mounted() {\r\n    class TextScramble {\r\n      constructor(el) {\r\n        this.el = el;\r\n        this.chars = \"________\";\r\n        this.update = this.update.bind(this);\r\n      }\r\n      setText(newText) {\r\n        const oldText = this.el.innerText;\r\n        const length = Math.max(oldText.length, newText.length);\r\n        const promise = new Promise((resolve) => (this.resolve = resolve));\r\n        this.queue = [];\r\n        for (let i = 0; i < length; i++) {\r\n          const from = oldText[i] || \"\";\r\n          const to = newText[i] || \"\";\r\n          const start = Math.floor(Math.random() * 40);\r\n          const end = start + Math.floor(Math.random() * 40);\r\n          this.queue.push({ from, to, start, end });\r\n        }\r\n        cancelAnimationFrame(this.frameRequest);\r\n        this.frame = 0;\r\n        this.update();\r\n        return promise;\r\n      }\r\n      update() {\r\n        let output = \"\";\r\n        let complete = 0;\r\n        for (let i = 0, n = this.queue.length; i < n; i++) {\r\n          let { from, to, start, end, char } = this.queue[i];\r\n          if (this.frame >= end) {\r\n            complete++;\r\n            output += to;\r\n          } else if (this.frame >= start) {\r\n            if (!char || Math.random() < 0.28) {\r\n              char = this.randomChar();\r\n              this.queue[i].char = char;\r\n            }\r\n            output += `<span class=\"dud\">${char}</span>`;\r\n          } else {\r\n            output += from;\r\n          }\r\n        }\r\n        this.el.innerHTML = output;\r\n        if (complete === this.queue.length) {\r\n          this.resolve();\r\n        } else {\r\n          this.frameRequest = requestAnimationFrame(this.update);\r\n          this.frame++;\r\n        }\r\n      }\r\n      randomChar() {\r\n        return this.chars[Math.floor(Math.random() * this.chars.length)];\r\n      }\r\n    }\r\n\r\n    let el = document.querySelector(\".hero .description\");\r\n\r\n    if (!el) {\r\n      const timer = setInterval(() => {\r\n        if (el) {\r\n          init();\r\n          timer && clearInterval(timer);\r\n        }\r\n        el = document.querySelector(\".hero .description\");\r\n      }, 100);\r\n    } else {\r\n      init();\r\n    }\r\n\r\n    function init() {\r\n      const fx = new TextScramble(el);\r\n      const phrases = [\r\n        \"有些鸟儿是关不住的\",\r\n        \"它的每一根羽毛都闪耀着自由的光辉\",\r\n        \"做人如果没有梦想\",\r\n        \"那跟咸鱼有什么区别\",\r\n        \"给我一个机会，我想做个好人\",\r\n        \"当你认为没有错误的时候\",\r\n        \"错就一定会来找你\",\r\n        \"没有人能够永远年轻\",\r\n        \"但永远有人正年轻着\",\r\n      ];\r\n      // fx.setText('写代码的憨憨')\r\n      let counter = 0;\r\n      const next = () => {\r\n        fx.setText(phrases[counter]).then(() => {\r\n          setTimeout(next, 2000);\r\n        });\r\n        counter = (counter + 1) % phrases.length;\r\n      };\r\n      next();\r\n    }\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n</style>\r\n"],"sourceRoot":"docs/.vuepress/components"}]}